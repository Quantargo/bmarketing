if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove) {x}
else x[,-c(cols_to_remove)]
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove) {x}
x[,-c(cols_to_remove)]
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove) {return x}
x[,-c(cols_to_remove)]
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove) {return(x)}
return(x[,-c(cols_to_remove)])
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove) {return(x)}
return(x[,-c(cols_to_remove)])
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)) {return(x)}
return(x[,-c(cols_to_remove)])
}
clean(test_data)
clean(test_data, "V2")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)) {return(x)}
else return(x[,-c(cols_to_remove)])
}
clean(test_data, "V2")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)) {return(x)}
else {
warning("Columns " && cols_to_remove && "were removed!")
return(x[,-c(cols_to_remove)])
}
}
clean(test_data, "V2")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)) {return(x)}
else {
warning("Columns " && as.string(cols_to_remove) && "were removed!")
return(x[,-c(cols_to_remove)])
}
}
clean(test_data, "V2")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-c(cols_to_remove)])
}
}
clean(test_data, "V2")
names(count_na[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5])
names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5])
is.null(names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5]))
is.na(names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5]))
is.null(names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5]))
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (is.null(cols_to_remove)==TRUE) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-c(cols_to_remove)])
}
}
clean(test_data, "V2")
is.null(names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5]))
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-c(cols_to_remove)])
}
}
clean(test_data, "V2")
test_data&V1 <- c(NA,NA,3)
test_data[1:2, 1] <- NA
test_data
clean(test_data, "V2")
names(sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y))[sapply(test_data, function(y) sum(length(which(is.na(y))))/length(y)) > 0.5])
test_data[,-c("V1")]
c(1)
c("1")
c("V1")
test_data[,-c("V1")]
test_data[,-1]
test_data[,"V1"]
test_data[,-"V1"]
test_data[,"V1")]
test_data[,-c("V1")]
test_data[,-which(colnames(test_data)=="V1")]
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove])
}
}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
clean(test_data, "V2")
library(bmarketing)
library(bmarketing)
devtools::check()
devtools:document()
devtools::document()
devtools::document()
devtools::document()
?bmarketing
devtools::document()
?bmarketing
devtools::document()
devtools::document()
devtools::document()
?bmarketing
devtools::document()
?bmarketing
??bmarketing
library(bmarketing)
?bmarketing
devtools::document()
devtools::document()
devtools::document()
devtools::document()
?bmarketing
devtools::document()
?bmarketing
devtools::check()
library(bmarketing)
devtools::check()
?Team1
?team1
?bmarketing
?clean
devtools::load_all()
?clean
?bmarketing
devtools::install_github("WonderAnn/bmarketing")
devtools::document()
?bmarketing
devtools::document()
?bmarketing
devtools::document()
?bmarketing
?bmarketing
devtools::install_github("WonderAnn/bmarketing")
devtools::install_github("WonderAnn/bmarketing")
devtools::install_github("WonderAnn/bmarketing")
devtools::install_github("WonderAnn/bmarketing")
devtools::install_github("WonderAnn/bmarketing")
devtools::load_all()
clean
test_data <- cbind(c(1,2,3), c(a,b,c), c(5,6,7))
test_data <- cbind(c(1,2,3), c("a","b","c"), c(5,6,7))
colnames(test_data) <- c("ev1","ev2","tv") #naming columns: ev1 = explanatory var.1, etc; tv = target var
test_Data
test_data
test_data <- cbind(c(1,2,3), c("a","b","c"), c(5,NA,7))
colnames(test_data) <- c("ev1","ev2","tv") #naming columns: ev1 = explanatory var.1, etc; tv = target var
clean(test_data, "tv")
test_data <- as.data.frame(cbind(c(1,2,3), c("a","b","c"), c(5,NA,7)))
colnames(test_data) <- c("ev1","ev2","tv") #naming columns: ev1 = explanatory var.1, etc; tv = target var
clean(test_data, "tv")
?clean
devtools::install_github("WonderAnn/bmarketing")
clean
devtools::install_github("WonderAnn/bmarketing")
?team1
?Team1
?Team1
library(Team1)
?Team1
?Team1
Team1::
Team1::clear1
Team1:::clear1
Team1:::clear2
?Team1
clear1
library(Team1)
clear1
Team1::clear1
Team1:::clear1
devtools::install_github("WonderAnn/bmarketing")
library(Team1)
clear1
Team1::clear1
Team1:::clear1
clear(c)
clear1(c)
devtools::install_github("WonderAnn/bmarketing")
clear1
Team1::clear1
Team1:::clear1
devtools::install_github("WonderAnn/bmarketing")
library(Team1)
cclear1
clear1
#################Loading data into the environment#################
bmarketing <- read.csv2("inst/bmarketing2.csv",dec = ".")
clean(bmarketing, "DEFAULT")
View(bmarketing)
#################Loading data into the environment#################
bmarketing <- read.csv2("inst/bmarketing2.csv")
View(bmarketing)
#################Loading data into the environment#################
bmarketing <- read.csv2("inst/bmarketing2.csv",sep = ",")
clean(bmarketing, "DEFAULT")
cleaned_data <- clean(bmarketing, "DEFAULT")
is.na(bmarketing$DEFAULT)
any(is.na(bmarketing$DEFAULT))
any(is.na(bmarketing$DEFAULT))==TRUE
any(is.na(bmarketing$"DEFAULT"))==TRUE
clean
cleaned_data <- clean(bmarketing, "DEFAULT")
any(is.na(bmarketing$DEFAULT))==TRUE
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
if (is.na(match(DEFAULT, names(bmarketing)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
if (is.na(match("DEFAULT", names(bmarketing)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) stop("The target variabe t contais NA values")
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
if (any(is.na(bmarketing$DEFAULT))==TRUE) {stop("The target variabe t contais NA values")}
cleaned_data <- clean(bmarketing, "DEFAULT")
(any(is.na(bmarketing$DEFAULT))==TRUE)
clean <- function(x, t) {
stop("stop")
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) stop("The target variabe t contais NA values")
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x$t))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
any(is.na(bmarketing$DEFAULT))
all(is.na(bmarketing$DEFAULT))
any(is.na(bmarketing$DEFAULT))
is.data.frame(bmarketing)
cleaned_data <- clean(bmarketing, "DEFAUL")
cleaned_data <- clean(bmarketing, "DEFAULT")
typeof(any(is.na(bmarketing$DEFAULT)))
typeof(TRUE)
any(is.na(bmarketing$DEFAULT))
any(is.na(bmarketing$DEFAULT))
cleaned_data <- clean(bmarketing, "DEFAULT")
mtcars
mtcars$"mpg"
x <- bmarketing
is.na(x$t)
t
t <- "DEFAULT"
is.na(x$t)
x$t
t
x
x[[t]]
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop("The target variabe t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop("The target variabe $t contais NA values")}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", cols_to_remove))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", paste(cols_to_remove)))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "DEFAULT")
cleaned_data <- clean(bmarketing, "AGE")
cleaned_data <- clean(bmarketing, "JOB")
cleaned_data <- clean(bmarketing, "DURATION")
cleaned_data <- clean(bmarketing, "X")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", c(cols_to_remove)))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "X")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", as.string(cols_to_remove)))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "X")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", as.character(cols_to_remove)))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "X")
clean <- function(x, t) {
if (is.data.frame(x)==FALSE) {stop("Parameter x must be a dataframe")}
if (is.na(match(t, names(x)))==TRUE) {stop("Parameter t must be the name (string) of a column in the dataframe")}
if (any(is.na(x[[t]]))==TRUE) {stop(paste("The target variabe", t, "contais NA values"))}
if (any(is.na(x[ , -which(colnames(x)==t)]))==TRUE) {warning("Explanatory variables contain NA values")}
count_na <- sapply(x, function(y) sum(length(which(is.na(y))))/length(y))
cols_to_remove <- names(count_na[count_na > 0.5])
if (length(cols_to_remove)==0) {return(x)}
else {
warning(paste("The following columns are removed: ", paste(cols_to_remove,collapse=", ")))
return(x[,-which(colnames(x)==cols_to_remove)])
}
}
cleaned_data <- clean(bmarketing, "X")
cleaned_data <- clean(bmarketing, "DEFAULT")
